a < seq(1,50)
a <- seq(1,50)
a
combn(x,3)
combn(a,3)
a
combn(a,3)[1]
combn(a,3)[,1]
combn(a,3)[,2]
combn(a,3)[,3]
a <- c("a","b"."c"."d","e")
a <- c("a","b","c"."d","e")
a <- c("a","b","c","d","e")
combn(a,3)
combn(a,3, simplift=F)
a
parts <- listParts(length(a))
out <- rapply(parts, function(ii) x[ii], how="replace")
install.packages("partitions")
library(partitions)
library("partitions")
library(partitions)
install.packages("partitions")
install.packages("gmp")
install.packages("partitions")
library(partitions)
install.packages("partitions")
install.packages(partitions)
install.packages("partitions")
install.packages("partitions")
install.packages("gmp")
install.packages("partitions")
library(partitions)
install.packages("partitions")
install.packages('codetools')
install.packages("partitions")
library(partitions)
install.packages("partitions", dependencies=T)
install.packages("partitions", dependencies=T)
install.packages(c("sourcetools", "shiny"))
install.packages("partitions", dependencies=T)
install.packages("/tmp/RtmppUaktg/downloaded_packages/partitions_1.9-19.tar.gz", repos = NULL, type="source")
source("~/Desktop/partitions/R/partitions.R")
install.packages("~/Desktop/partitions/", repos = NULL, type="source")
install.packages("~/Desktop/partitions/R", repos = NULL, type="source")
install.packages("~/Desktop/partitions", repos = NULL, type="source")
x <- c(2,4,6)       # Substitute the vector for which you want partitions
parts <- listParts(length(x))
out <- rapply(parts, function(ii) x[ii], how="replace")
.local_packages <- c("zwc")
# Load packages into session
sapply(c(.cran_packages, .bioc_packages, .local_packages), require, character.only = TRUE)
#library("BiocStyle")
.cran_packages <- c("ggplot2", "tidyverse", "magrittr","plyr","dplyr","RColorBrewer","reshape2", "igraph", "readr")
# Load packages into session
sapply(c(.cran_packages, .bioc_packages, .local_packages), require, character.only = TRUE)
.bioc_packages <- c("dBiostrings")
# Load packages into session
sapply(c(.cran_packages, .bioc_packages, .local_packages), require, character.only = TRUE)
options(warn=-1)
# local.libpath <- "C:/Program Files/R/R-3.4.3/library"
local.libpath <- "~/R/x86_64-pc-linux-gnu-library/3.4"
.cran_packages <- c("devtools", "curl","dplyr","reshape2", "tidyverse", "magrittr", "readr", "stringr", "data.table", "svMisc")
.bioc_packages <- c("Biostrings")
.local_packages <-c("zwc")
.inst <- .cran_packages %in% installed.packages()
if(any(!.inst)) {
install.packages(.cran_packages[!.inst])
}
.inst <- .bioc_packages %in% installed.packages()
if(any(!.inst)) {
source("http://bioconductor.org/biocLite.R")
biocLite(.bioc_packages[!.inst], ask = F)
}; sapply(c(.cran_packages, .bioc_packages), require, character.only = TRUE)
.inst <- .local_packages %in% installed.packages()
if(any(!.inst)) {
withr::with_libpaths(new = local.libpath, devtools::install_github('arendsee/zwc'))
}; sapply(c(.local_packages), require, character.only = TRUE)
setwd("~/Dropbox/Classes/BCB_II/BCB_II_HW_4")
# setwd("C:/Users/schuyler/Dropbox/Classes/BCB_II/BCB_II_HW_4")
source("Functions/MC_seq_analysis.R")
source("Functions/simulate_MC_reads.R")
# Set the dataset for analysis, either test or real data
#test pdb test-v2 pdb-v2
fasta <- "simulated_reads_order_2"
order <- 8
fasta_file <- paste("Fastas/",fasta,".fa",sep="")
order_analysis <- MC_seq_analysis(fasta_file = fasta_file, order = order)
saveRDS(order_analysis, file = paste("MC_Analysis/order_",order,"_",fasta,".RDS", sep=""))
# simulated_reads <- simulate_MC_reads(order_analysis)
# writeXStringSet(BStringSet(simulated_reads), "Fastas/simulated_reads_order_2.fa")
source("Functions/likelihood_ratio_test.R")
orders <- 8
fasta <- "simulated_reads_order_2"
# fasta <- "pdb"
# options for @
# likelihoods
# simulation_likelihood
likelihood_table <- data.table(order = 1:orders,
LL = apply(array(1:orders), 1, FUN=function(x){
sum(readRDS(paste("MC_Analysis/order_",x,"_",fasta,".RDS", sep=""))@likelihoods)}))
likelihood_ratio_test(likelihood_table, 0.95)
likelihood_table <- data.table(order = 1:orders,
LL = apply(array(1:orders), 1, FUN=function(x){
sum(readRDS(paste("MC_Analysis/order_",x,"_",fasta,".RDS", sep=""))@likelihood)}))
likelihood_ratio_test(likelihood_table, 0.95)
likelihood_table
sink("R_Output/lrt")
likelihood_table
sink()
likelihood_table <- data.table(read.table("MC_Analysis/pdb.likelihoods.trimmed", header=TRUE ,sep=","))
likelihood_table <- likelihood_table[-c(9,10),]
likelihood_ratio_test(likelihood_table, 0.95)
colnames(likelihood_table) <- c("order", "LL","df","t","chisqr","reject_H0")
likelihood_table
sink("R_Output/lrt_pdb")
likelihood_table
sink()
source('~/Dropbox/Classes/BCB_II/BCB_II_HW_4/Functions/likelihood_ratio_test.R')
likelihood_table <- data.table(order = 1:orders,
LL = apply(array(1:orders), 1, FUN=function(x){
sum(readRDS(paste("MC_Analysis/order_",x,"_",fasta,".RDS", sep=""))@likelihood)}))
likelihood_ratio_test(likelihood_table, 0.95)
likelihood_table
source('~/Dropbox/Classes/BCB_II/BCB_II_HW_4/Functions/likelihood_ratio_test.R')
likelihood_table <- data.table(order = 1:orders,
LL = apply(array(1:orders), 1, FUN=function(x){
sum(readRDS(paste("MC_Analysis/order_",x,"_",fasta,".RDS", sep=""))@likelihood)}))
likelihood_ratio_test(likelihood_table, 0.95)
likelihood_table
likelihood_table <- data.table(read.table("MC_Analysis/pdb.likelihoods.trimmed", header=TRUE ,sep=","))
likelihood_table <- likelihood_table[-c(9,10),]
likelihood_ratio_test(likelihood_table, 0.95)
colnames(likelihood_table) <- c("order", "LL","df","t","chisqr","reject_H0")
likelihood_table
